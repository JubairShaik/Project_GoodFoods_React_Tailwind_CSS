{/** *

 
// SRC: its a Common Convection in Developer Industry
// modular and Findable

// UseState
// we Create the Local State Variables Which Comes As Named Import From The React Library 

// example :


// reconciliation Happens In UseState?

// const [clicked, setclicked] = useState("false");
// <h1 className="text-white">{clicked}</h1>
// <button onClick={()=>{
//   setclicked("true");
// }} />


// earlier The Value is {False}

// it will Just Re-render the {h1} and Make It {true} After Clicking 

 // on click Modify Local Variable With the Filter Data *
// update the state 


// filterdata(searchText, restaurants);
// search the item from the FoodList (list Of Restaurants(FoodList))



    
    
// if(filterdRestaurants?.length===0)
// return <h1 className="text-white text-xl" >No Restaurants Found</h1>







 // Create Context?
    
//  <input type="text"
//  value={user.name}
//  onChange = {(e)=>{
//    setUser({
//      ...user,
//      name:e.target.value,
//    });
//  }}>
//  </input>
 
// <input type="text"
// className="md:w-[15rem] w-[15rem] text-[1rem] md:text-[1.3rem]
//    text-black bg-slate-100 h-10 pl-6 font-poppins rounded-md
//     md:rounded-l-full outline-none my-4" 
//  value={user.email}
//  onChange = {(e)=>{
//    setUser({
//      ...user,
//      email:e.target.value,
//    });
//  }}>
 
//  </input>








addiing to CArt 


  const dispatch = useDispatch();
  
  const handleAddItem = ()=>{
      dispatch(addItem("Grapes"))
  }
  
  const handleRemoveItem = ()=>{
      dispatch( removeItem([]))
  }
  


 <div className=" mt-5 cursor-pointer rounded-2xl p-2 bg-slate-700">
          <button onClick={()=>handleAddItem()} 
          className=" m-3 px-5 rounded-[10px] py-2 bg-green-500">Add to Cart
          </button>
       
          <button onClick={()=>handleRemoveItem()} 
          className="  m-3 px-5  rounded-[10px] py-2 bg-red-500">Remove an Item
          </button>
          </div>



*/}





Why 2 Libraies - ?


npm i @reduxjs/toolkit and  (npm i react-redux)

What iS the Job Of Redux ?
=> redux Main Job Is To Manage The Store and Maintains It...

RTK = Redux toolkit 
configureStore will come from  @reduxjs/toolkit

import {configureStore} @reduxjs/toolkit

we Will Need a <Provider/> (Like A Supplier:)

 We Can Provide Store to either Entire app OR Some Particular Components

 import {Provider} from "react-redux"


createSlice=>


import { createSlice } from "@reduxjs/toolkit";

const cartSlice = createSlice({
    name:"cart",
    initialState:{
        items:[],
    }
})


initialState === state


we Will Modify The Cart Using Reducer Function 

Reducers Will be Called On Dispach Of An Action 

#Reducer is Also a Function

const cartSlice = createSlice({
    name:"cart",
    initialState:{
        items:[],
    },
    reducers:{
        addItem:()=>{
            
        }
    }
})

cartSlice Will Need a name...
Then An initialState..then Some Reducers
reducers Will Contain Some Mapping Of Actions and a reducer function 

...
How We Will Modify The Store is ..
the Reducer Function takes in two Things (state,action)
---------------------------------------
const cartSlice = createSlice({
    name:"cart",
    initialState:{
        items:[],
    },
    reducers:{
        addItem: (state,action) => {

        }
    }
})
{/*-------------------------------------------*/}

intitial State IS Empty 
and (Action) is the New Data Coming In ... (from UI)

  addItem: (state, action) => {
  |     state.items.push(action.payload);
  |
  }

import { createSlice } from "@reduxjs/toolkit";

const cartSlice = createSlice({
    name:"cart",
    initialState:{
        items:["Apples","Bananana"],
    },
    reducers:{
        
        addItem : (state, action) => {
            state.items.push(action.payload);
        },
        removeItem:(state,action) =>{
            state.items.pop();
             
        },
        clearCart : (state,action) => {
            state.items = []
        },
    },
});

export default cartSlice.reducer ;


{-------------------Behind The Scenes------------------}

import { createSlice } from "@reduxjs/toolkit";

const cartSlice = createSlice({
    name:"cart",
    initialState:{
        items:["Apples","Bananana"],
    },
    reducers:{  
        addItem : (state, action) => {
            state.items.push(action.payload);
        },
        removeItem:(state,action) =>{
            state.items.pop();
             
        },
        clearCart : (state,action) => {
            state.items = []
        },
    },
});

export const { addItem , removeItem , clearCart } = cartSlice.actions ;
export default cartSlice.reducer ;

{**********
cartSlice ={
    actions:{
        addItem,
        removeItem,
    }
    reducer:reducers
}
***********}



import {configureStore} from "@reduxjs/toolkit" ;
import cartSlice from "./cartSlice";

const store = configureStore({

    reducer:{
        cart:cartSlice,
    }

});

export default store


The Name Of the Object Will Be "reducer" #OnlyOne 
  reducer:{
        cart:cartSlice,
    }
    
    #onerootreducer
    :)





import { userSelector } from "react-redux";

the Job of userSelector is to gives you Access to Store 